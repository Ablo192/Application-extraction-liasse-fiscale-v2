import streamlit as st
import tempfile
import shutil
from pathlib import Path
from main import extraire_un_pdf, creer_fichier_excel

# Configuration de la page
st.set_page_config(
    page_title="Extraction Liasse Fiscale",
    page_icon="üìä",
    layout="wide"
)

# Titre principal
st.title("üìä Extraction Automatique de Liasses Fiscales")
st.markdown("---")

# Instructions
st.markdown("""
### üìã Instructions
1. **T√©l√©versez** vos fichiers PDF (liasses fiscales)
2. **Indiquez l'ann√©e** pour chaque fichier
3. **Cliquez** sur "Extraire les donn√©es"
4. **T√©l√©chargez** le fichier Excel g√©n√©r√©
""")

st.markdown("---")

# Zone de t√©l√©versement
st.subheader("üìÅ T√©l√©versement des fichiers")
uploaded_files = st.file_uploader(
    "D√©posez vos fichiers PDF ici",
    type=['pdf'],
    accept_multiple_files=True,
    help="Vous pouvez glisser-d√©poser plusieurs fichiers PDF"
)

# Si des fichiers sont upload√©s
if uploaded_files:
    st.success(f"‚úÖ {len(uploaded_files)} fichier(s) t√©l√©vers√©(s)")
    
    st.markdown("---")
    st.subheader("üìÖ Attribution des ann√©es")
    
    # Cr√©er un dictionnaire pour stocker les ann√©es
    fichiers_annees = {}
    
    # Cr√©er une colonne pour chaque fichier
    cols = st.columns(min(len(uploaded_files), 3))
    
    for idx, uploaded_file in enumerate(uploaded_files):
        with cols[idx % 3]:
            st.markdown(f"**{uploaded_file.name}**")
            annee = st.text_input(
                "Ann√©e",
                value="",
                key=f"annee_{idx}",
                placeholder="Ex: 2023",
                help="Indiquez l'ann√©e de cet exercice fiscal"
            )
            fichiers_annees[uploaded_file.name] = {
                'file': uploaded_file,
                'annee': annee
            }
    
    st.markdown("---")
    
    # Nom du fichier de sortie
    st.subheader("üìù Nom du fichier Excel")
    
    col1, col2 = st.columns([3, 1])
    
    with col1:
        nom_fichier_excel = st.text_input(
            "Nom du fichier de sortie (sans extension)",
            value="extraction_liasses_fiscales",
            help="Le fichier sera enregistr√© avec l'extension .xlsx automatiquement"
        )
    
    with col2:
        ajouter_date = st.checkbox(
            "Ajouter la date",
            value=False,
            help="Ajoute la date du jour au nom (ex: fichier_20251023.xlsx)"
        )
    
    # Aper√ßu du nom
    from datetime import datetime
    nom_apercu = nom_fichier_excel
    if ajouter_date:
        nom_apercu = f"{nom_fichier_excel}_{datetime.now().strftime('%Y%m%d')}"
    st.caption(f"üìÑ Aper√ßu : `{nom_apercu}.xlsx`")
    
    st.markdown("---")
    
    # Bouton d'extraction
    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col2:
        if st.button("üöÄ Extraire les donn√©es", type="primary", use_container_width=True):
            
            # V√©rifier que toutes les ann√©es sont renseign√©es
            annees_manquantes = [nom for nom, data in fichiers_annees.items() if not data['annee']]
            
            if annees_manquantes:
                st.error(f"‚ùå Veuillez renseigner l'ann√©e pour : {', '.join(annees_manquantes)}")
            else:
                # Cr√©er un dossier temporaire pour les PDFs
                with tempfile.TemporaryDirectory() as temp_dir:
                    temp_path = Path(temp_dir)
                    
                    # Barre de progression
                    progress_bar = st.progress(0)
                    status_text = st.empty()
                    
                    donnees_par_annee = {}
                    total_files = len(fichiers_annees)
                    
                    # Traiter chaque fichier
                    for idx, (nom_fichier, data) in enumerate(fichiers_annees.items()):
                        status_text.text(f"‚è≥ Traitement de {nom_fichier}...")
                        
                        # Sauvegarder le fichier temporairement
                        temp_pdf_path = temp_path / nom_fichier
                        with open(temp_pdf_path, 'wb') as f:
                            f.write(data['file'].getbuffer())
                        
                        # Extraire les donn√©es
                        resultats = extraire_un_pdf(temp_pdf_path)
                        
                        if resultats:
                            annee = data['annee'].strip()
                            donnees_par_annee[annee] = resultats
                            st.success(f"‚úÖ {nom_fichier} ‚Üí Ann√©e {annee} : Extraction r√©ussie")
                        else:
                            st.error(f"‚ùå {nom_fichier} : √âchec de l'extraction")
                        
                        # Mise √† jour de la barre de progression
                        progress_bar.progress((idx + 1) / total_files)
                    
                    status_text.text("üìä G√©n√©ration du fichier Excel...")
                    
                    # G√©n√©rer le fichier Excel si on a des donn√©es
                    if donnees_par_annee:
                        # Cr√©er le fichier Excel
                        resultats_dir = Path("resultats")
                        resultats_dir.mkdir(exist_ok=True)
                        
                        nom_excel = resultats_dir / "extraction_multi_annees.xlsx"
                        creer_fichier_excel(donnees_par_annee, nom_excel)
                        
                        status_text.text("‚úÖ Extraction termin√©e !")
                        progress_bar.progress(1.0)
                        
                        st.markdown("---")
                        st.success("üéâ Extraction r√©ussie !")
                        
                        # Bouton de t√©l√©chargement
                        with open(nom_excel, 'rb') as f:
                            from datetime import datetime
                            
                            # Nettoyer le nom du fichier (enlever caract√®res sp√©ciaux)
                            nom_propre = "".join(c for c in nom_fichier_excel if c.isalnum() or c in (' ', '-', '_')).strip()
                            if not nom_propre:
                                nom_propre = "extraction_liasses_fiscales"
                            
                            # Ajouter la date si demand√©
                            if ajouter_date:
                                nom_propre = f"{nom_propre}_{datetime.now().strftime('%Y%m%d')}"
                            
                            st.download_button(
                                label="üì• T√©l√©charger le fichier Excel",
                                data=f,
                                file_name=f"{nom_propre}.xlsx",
                                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                                type="primary",
                                use_container_width=True
                            )
                        
                        # Afficher un r√©sum√©
                        st.markdown("### üìà R√©sum√©")
                        col1, col2, col3 = st.columns(3)
                        
                        with col1:
                            st.metric("Fichiers trait√©s", len(donnees_par_annee))
                        
                        with col2:
                            annees = sorted(donnees_par_annee.keys())
                            st.metric("Ann√©es couvertes", f"{annees[0]} - {annees[-1]}")
                        
                        with col3:
                            st.metric("Onglets cr√©√©s", "2")
                    
                    else:
                        status_text.text("‚ùå Aucune donn√©e extraite")
                        st.error("Aucun fichier n'a pu √™tre trait√© avec succ√®s.")

else:
    st.info("üëÜ Commencez par t√©l√©verser vos fichiers PDF")

# Footer
st.markdown("---")
st.markdown("""
<div style='text-align: center; color: gray; padding: 20px;'>
    <p>üìä Extraction Automatique de Liasses Fiscales v2.0</p>
    <p>Onglet 1 : Donn√©es brutes ‚Ä¢ Onglet 2 : Analyse financi√®re avec ratios automatiques</p>
</div>
""", unsafe_allow_html=True)
